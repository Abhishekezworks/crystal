## expect(errors).toBeFalsy()
## expect(queries).toHaveLength(1);
## expect(data.allMessagesConnection.edges).toHaveLength(3);
## expect(data.allMessagesConnection.edges[0].cursor).toEqual("WyJmMGIyOGM5NGMxIiwiY2E3MGNhNzAtMDAwMC0wMDAwLTAwMDAtY2VjMTExYTBjYTcwIl0=");
## expect(data.allMessagesConnection.edges[0].node.author.username).toEqual("Cecilia");
## expect(data.allMessagesConnection.edges[1].node.author.username).toEqual("Alice");
## expect(data.allMessagesConnection.edges[2].node.author.username).toEqual("Bob");
## expect(data.allMessagesConnection.pageInfo.hasPreviousPage).toEqual(true);
## expect(data.allMessagesConnection.pageInfo.hasNextPage).toEqual(true);
## expect(data.allMessagesConnection.pageInfo.totalCount).toEqual(6);
{
  # Last 3 records before (Cecilia / Postgres)
  allMessagesConnection(
    last: 3
    before: "WyJmMGIyOGM5NGMxIiwiZjE3MGYxNzAtMDAwMC0wMDAwLTAwMDAtY2VjMTExYTBmMTcwIl0="
  ) {
    edges {
      cursor
      node {
        body
        author {
          username
          gravatarUrl
        }
      }
    }
    pageInfo {
      hasNextPage
      hasPreviousPage
      totalCount
    }
  }
}
