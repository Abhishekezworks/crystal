## expect(errors).toBeFalsy()
#> schema: ["polymorphic"]
#> simpleCollections: "both"
## expect(data.allPeople.nodes[0].applications.edges[0].node.__typename).toEqual("AwsApplication")
## expect(data.allPeople.nodes[0].applications.edges[0].node.id).toEqual(5)
## expect(data.allPeople.nodes[0].applications.edges[0].cursor).toEqual("WyI0OTgwM2MxZTJiIiwiQXdzQXBwbGljYXRpb24iLCJbXCI1XCJdIl0=")

{
  allPeople(first: 4) {
    nodes {
      personId
      username
      applications(
        first: 1
        after: "WyI0OTgwM2MxZTJiIiwiQXdzQXBwbGljYXRpb24iLCJbXCI0XCJdIl0=" # AwsApplication/4
      ) {
        edges {
          cursor
          node {
            __typename
            id
            vulnerabilities(first: 1) {
              edges {
                cursor
                node {
                  __typename
                  id
                }
              }
            }
          }
        }
      }
    }
  }
}
