%%{init: {'themeVariables': { 'fontSize': '12px'}}}%%
graph TD
    classDef path fill:#eee,stroke:#000,color:#000
    classDef plan fill:#fff,stroke-width:1px,color:#000
    classDef itemplan fill:#fff,stroke-width:2px,color:#000
    classDef unbatchedplan fill:#dff,stroke-width:1px,color:#000
    classDef sideeffectplan fill:#fcc,stroke-width:2px,color:#000
    classDef bucket fill:#f6f6f6,color:#000,stroke-width:2px,text-align:left


    %% plan dependencies
    PgSelect7[["PgSelect[7∈0] ➊<br />ᐸrange_testᐳ"]]:::plan
    Object10{{"Object[10∈0] ➊<br />ᐸ{pgSettings,withPgClient}ᐳ"}}:::plan
    Constant38{{"Constant[38∈0] ➊<br />ᐸ934ᐳ"}}:::plan
    Lambda23{{"Lambda[23∈0] ➊<br />ᐸcalculateShouldReverseOrderᐳ"}}:::plan
    Access27{{"Access[27∈0] ➊<br />ᐸ26.0ᐳ"}}:::plan
    Lambda32{{"Lambda[32∈0] ➊<br />ᐸcalculateOrderBySQLᐳ"}}:::plan
    Lambda37{{"Lambda[37∈0] ➊<br />ᐸcalculateOrderBySQLᐳ"}}:::plan
    Object10 & Constant38 & Lambda23 & Access27 & Lambda32 & Lambda37 --> PgSelect7
    Object31{{"Object[31∈0] ➊<br />ᐸ{reverse,orders,alias,codec}ᐳ"}}:::plan
    Constant28{{"Constant[28∈0] ➊<br />ᐸ[]ᐳ"}}:::plan
    Constant29{{"Constant[29∈0] ➊<br />ᐸsql.identifier(”range_test”)ᐳ"}}:::plan
    Constant30{{"Constant[30∈0] ➊<br />ᐸRecordCodec(rangeTest)ᐳ"}}:::plan
    Lambda23 & Constant28 & Constant29 & Constant30 --> Object31
    Access8{{"Access[8∈0] ➊<br />ᐸ2.pgSettingsᐳ"}}:::plan
    Access9{{"Access[9∈0] ➊<br />ᐸ2.withPgClientᐳ"}}:::plan
    Access8 & Access9 --> Object10
    __Value2["__Value[2∈0] ➊<br />ᐸcontextᐳ"]:::plan
    __Value2 --> Access8
    __Value2 --> Access9
    First11{{"First[11∈0] ➊"}}:::plan
    PgSelectRows12[["PgSelectRows[12∈0] ➊"]]:::plan
    PgSelectRows12 --> First11
    PgSelect7 --> PgSelectRows12
    PgSelectSingle13{{"PgSelectSingle[13∈0] ➊<br />ᐸrange_testᐳ"}}:::plan
    First11 --> PgSelectSingle13
    Constant39{{"Constant[39∈0] ➊<br />ᐸ§{ first: null, last: null, cursorLower: null, cursorUpper: ᐳ"}}:::plan
    Constant39 --> Lambda23
    Lambda26{{"Lambda[26∈0] ➊<br />ᐸcalculateLimitAndOffsetSQLᐳ"}}:::plan
    Constant40{{"Constant[40∈0] ➊<br />ᐸ§{ first: null, last: null, cursorLower: null, cursorUpper: ᐳ"}}:::plan
    Constant40 --> Lambda26
    Lambda26 --> Access27
    Object31 --> Lambda32
    Constant41{{"Constant[41∈0] ➊<br />ᐸ§{ reverse: false, orders: [], alias: sql.identifier(”range_ᐳ"}}:::plan
    Constant41 --> Lambda37
    __Value4["__Value[4∈0] ➊<br />ᐸrootValueᐳ"]:::plan
    PgClassExpression14{{"PgClassExpression[14∈1] ➊<br />ᐸ__range_test__.”num”ᐳ"}}:::plan
    PgSelectSingle13 --> PgClassExpression14
    Access15{{"Access[15∈2] ➊<br />ᐸ14.startᐳ"}}:::plan
    PgClassExpression14 --> Access15
    Access18{{"Access[18∈2] ➊<br />ᐸ14.endᐳ"}}:::plan
    PgClassExpression14 --> Access18

    %% define steps

    subgraph "Buckets for queries/v4/numeric"
    Bucket0("Bucket 0 (root)<br /><br />1: <br />ᐳ: 8, 9, 28, 29, 30, 38, 39, 40, 41, 10, 23, 26, 27, 31, 32, 37<br />2: PgSelect[7]<br />3: PgSelectRows[12]<br />ᐳ: First[11], PgSelectSingle[13]"):::bucket
    classDef bucket0 stroke:#696969
    class Bucket0,__Value2,__Value4,PgSelect7,Access8,Access9,Object10,First11,PgSelectRows12,PgSelectSingle13,Lambda23,Lambda26,Access27,Constant28,Constant29,Constant30,Object31,Lambda32,Lambda37,Constant38,Constant39,Constant40,Constant41 bucket0
    Bucket1("Bucket 1 (nullableBoundary)<br />Deps: 13<br /><br />ROOT PgSelectSingleᐸrange_testᐳ[13]"):::bucket
    classDef bucket1 stroke:#00bfff
    class Bucket1,PgClassExpression14 bucket1
    Bucket2("Bucket 2 (nullableBoundary)<br />Deps: 14<br /><br />ROOT PgClassExpression{1}ᐸ__range_test__.”num”ᐳ[14]"):::bucket
    classDef bucket2 stroke:#7f007f
    class Bucket2,Access15,Access18 bucket2
    Bucket3("Bucket 3 (nullableBoundary)<br />Deps: 15, 14<br /><br />ROOT Access{2}ᐸ14.startᐳ[15]"):::bucket
    classDef bucket3 stroke:#ffa500
    class Bucket3 bucket3
    Bucket4("Bucket 4 (nullableBoundary)<br />Deps: 18, 14<br /><br />ROOT Access{2}ᐸ14.endᐳ[18]"):::bucket
    classDef bucket4 stroke:#0000ff
    class Bucket4 bucket4
    Bucket0 --> Bucket1
    Bucket1 --> Bucket2
    Bucket2 --> Bucket3 & Bucket4
    end
